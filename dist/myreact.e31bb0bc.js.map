{"version":3,"sources":["react-dom/index.js","react/Component.js","react/index.js","index.js"],"names":["ReactDOM","render","vnode","container","append","_render","undefined","String","textNode","document","createTextNode","tag","comp","createComponent","attrs","setComponentProps","base","dom","createElement","Object","keys","map","key","setAttribute","children","forEach","child","props","instance","prototype","Component","constructor","componentWillMount","componentWillReceiveProps","renderComponent","console","log","renderer","componentWillUpdate","componentDidUpdate","componentDidMount","parentNode","replaceChild","value","test","toLowerCase","style","cssText","removeAttribute","state","newState","assign","React","Tan","num","list","i","setState","preState","preProps","handleClick","bind","item","querySelector"],"mappings":"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","file":"myreact.e31bb0bc.js","sourceRoot":"..","sourcesContent":["import Component from '../react/Component'\r\n\r\nconst ReactDOM = {\r\n  render\r\n}\r\n\r\nfunction render(vnode, container) {\r\n  return container.append(_render(vnode))\r\n}\r\n\r\n// 返回要渲染\r\nfunction _render(vnode) {\r\n  // console.log(vnode)\r\n  // vnode为空、为undefined、为boolean\r\n  if (vnode === null ||\r\n    vnode === undefined ||\r\n    typeof vnode === 'boolean')\r\n    return\r\n\r\n  // vnode为数字\r\n  if (typeof vnode === 'number') {\r\n    vnode = String(vnode)\r\n  }\r\n  // vnode为字符串\r\n  if (typeof vnode === 'string') {\r\n    const textNode = document.createTextNode(vnode)\r\n    return textNode\r\n  }\r\n\r\n  // 组件\r\n  // 创建组件\r\n  // 设置属性\r\n  // 渲染组件\r\n\r\n  if (typeof vnode.tag === 'function') {\r\n    const comp = createComponent(vnode.tag, vnode.attrs)\r\n    setComponentProps(comp, vnode.attrs)\r\n    return comp.base\r\n  }\r\n\r\n  // vnode为object\r\n  // 创建一个元素\r\n  // 遍历加上属性\r\n  // append到container上\r\n  if (typeof vnode === 'object') {\r\n    const {\r\n      tag,\r\n      attrs\r\n    } = vnode\r\n    let dom = document.createElement(tag)\r\n    if (attrs) {\r\n      Object.keys(attrs).map(key => {\r\n        setAttribute(dom, key, attrs[key])\r\n      })\r\n    }\r\n\r\n    vnode.children && vnode.children.forEach(child => render(child, dom))\r\n\r\n    return dom\r\n  }\r\n}\r\n\r\n// 创建组件\r\nfunction createComponent(comp, props) {\r\n  // 类组件直接创建返回\r\n  // 函数组件就要构造成类组件\r\n  let instance\r\n  if (comp.prototype && comp.prototype.render) {\r\n    instance = new comp(props)\r\n  } else {\r\n    instance = new Component(props)\r\n    instance.constructor = comp\r\n    instance.render = function () {\r\n      return this.constructor(props)\r\n    }\r\n  }\r\n\r\n  return instance\r\n}\r\n\r\n// 设置组件\r\nfunction setComponentProps(comp, props) {\r\n  // 属性处理\r\n  // comp.base是否已经出现\r\n  // 否则是初始化数据\r\n  // 是则componentWillReceiveProps则接受新的props\r\n\r\n  if (!comp.base) {\r\n    if (comp.componentWillMount) {\r\n      comp.componentWillMount()\r\n    }\r\n  } else if (comp.componentWillReceiveProps) {\r\n    comp.componentWillReceiveProps()\r\n  }\r\n  comp.attrs = props\r\n  renderComponent(comp)\r\n}\r\n\r\n// 渲染组件\r\nexport function renderComponent(comp) {\r\n  console.log('comp', comp)\r\n  const renderer = comp.render()\r\n  let base = _render(renderer)\r\n\r\n  if (comp.base && comp.componentWillUpdate) {\r\n    comp.componentWillUpdate()\r\n  }\r\n\r\n  if (comp.base) {\r\n    if (comp.componentDidUpdate) {\r\n      comp.componentDidUpdate()\r\n    }\r\n  } else if (comp.componentDidMount) {\r\n    comp.componentDidMount()\r\n  }\r\n\r\n  // 节点替换\r\n  if (comp.base && comp.base.parentNode) {\r\n    comp.base.parentNode.replaceChild(base, comp.base)\r\n  }\r\n\r\n  comp.base = base\r\n}\r\n\r\n// 设置属性\r\nfunction setAttribute(dom, key, value) {\r\n  // className => class\r\n  if (key === 'className') {\r\n    key = 'class'\r\n  } else if (/on\\w+/.test(key)) {\r\n    // onCLick => click\r\n    key = key.toLowerCase()\r\n    dom[key] = value || ''\r\n  } else if (key === 'style') {\r\n    // style\r\n    // style=\"color: 'red'\"\r\n    // style={{color: 'red'}}\r\n    if (!value && typeof value === 'string') {\r\n      dom.style.cssText = value\r\n    } else if (typeof value === 'object') {\r\n      for (let key in value) {\r\n        if (typeof value[key] === 'number') {\r\n          dom.style[key] = value[key] + 'px'\r\n        } else {\r\n          dom.style[key] = value[key]\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // 其他的dom[key] = value， 更新\r\n    if (key in dom) {\r\n      dom[key] = value || ''\r\n    }\r\n\r\n    if (value) {\r\n      dom.setAttribute(key, value)\r\n    } else {\r\n      dom.removeAttribute(key)\r\n    }\r\n  }\r\n}\r\n\r\nexport default ReactDOM","import { renderComponent } from './../react-dom'\r\n\r\nclass Component {\r\n  constructor(props) {\r\n    this.props = props\r\n    this.state = {}\r\n  }\r\n  setState (newState) {\r\n    // 对象拷贝\r\n    Object.assign(this.state, newState)\r\n    // 重新渲染组件\r\n    renderComponent(this)\r\n  }\r\n}\r\n\r\nexport default Component","import Component from './Component'\r\n\r\nconst React = {\r\n  createElement,\r\n  Component\r\n}\r\n\r\nfunction createElement (tag, attrs, ...children) {\r\n  attrs = attrs || {}\r\n  return {\r\n    tag, \r\n    attrs,\r\n    children,\r\n    key: attrs.key || null\r\n  }\r\n}\r\n\r\nexport default React","import React from './react'\r\nimport ReactDOM from './react-dom'\r\n\r\n// const ele = (\r\n//   <div style={{color: 'red'}}>\r\n//     hello, <span>react</span>\r\n//   </div>\r\n// )\r\n\r\n// 函数组件\r\n// function Home(){\r\n//   return (\r\n//       <div className=\"active\" title=\"tan\">\r\n//           hello,<span>react</span>\r\n//           <Tan />\r\n//       </div>\r\n//   )\r\n// }\r\n\r\n// function Tan(){\r\n//   return (\r\n//       <h1>\r\n//           我是嵌套函数--\r\n//       </h1>\r\n//   )\r\n// }\r\n\r\n// function Home(){\r\n//   return (\r\n//       <div className=\"active\" title=\"tan\">\r\n//           hello,<span>react</span>\r\n//           <Tan tan=\"我是传进来的参数\" />\r\n//       </div>\r\n//   )\r\n// }\r\n\r\n// class Tan extends React.Component {\r\n\r\n//   constructor(props){\r\n//       super( props )\r\n//       this.state = {\r\n//           num: 0\r\n//       }\r\n//   }\r\n\r\n//   componentWillMount(){\r\n//       console.log( \"组件将要加载--\" )\r\n//   }\r\n\r\n//   componentWillReceiveProps( props ){\r\n//       console.log( \"componentWillReceiveProps\", props )\r\n//   }\r\n\r\n//   componentDidMount(){\r\n//       console.log( \"组件加载完成--\" )\r\n//   }\r\n\r\n//   componentWillUpdate(){\r\n//       console.log( \"组件将要更新\" )\r\n//   }\r\n\r\n//   componentDidUpdate(){\r\n//       console.log( \"组件更新完成\" )\r\n//   }\r\n  \r\n//   handleClick(){\r\n//       // 修改状态的方法是调用 setState\r\n//       console.log( \"数据改变了--\" )\r\n//       this.setState({\r\n//           num: this.state.num + 1\r\n//       })\r\n//   }\r\n\r\n//   render(){\r\n//       return (\r\n//           <div>\r\n//               <h1>我是类组件-----{ this.state.num }</h1>\r\n//               <button onClick={ this.handleClick.bind( this ) } >点击</button>\r\n//           </div>\r\n//       )\r\n//   }\r\n// }\r\n\r\n// 函数组件\r\n\r\nclass Tan extends React.Component {\r\n\r\n  constructor(props){\r\n      super( props )\r\n      this.state = {\r\n          num: 0,\r\n          list: [ 1,2,3,4,5 ]\r\n      }\r\n  }\r\n\r\n  componentWillMount(){\r\n      console.log( \"组件将要加载--\" )\r\n  }\r\n\r\n  componentWillReceiveProps( props ){\r\n      console.log( \"componentWillReceiveProps\", props )\r\n  }\r\n\r\n  componentDidMount(){\r\n      console.log( \"组件加载完成--\" )\r\n      console.log( this.state.list )\r\n      for( let i = 0; i < 10; i ++  ){\r\n          this.setState( ( preState, preProps ) => {\r\n              console.log( \"之前的状态：\", preState )\r\n              return {\r\n                  num: preState.num + 1\r\n              }\r\n          })\r\n      }\r\n  }\r\n\r\n  componentWillUpdate(){\r\n      console.log( \"组件将要更新\" )\r\n  }\r\n\r\n  componentDidUpdate(){\r\n      console.log( \"组件更新完成\" )\r\n  }\r\n  \r\n  handleClick(){\r\n      // 修改状态的方法是调用 setState\r\n      console.log( \"数据改变了--\" )\r\n      this.setState({\r\n          num: this.state.num + 1\r\n      })\r\n  }\r\n\r\n  render(){\r\n      console.log( \"render---\" ,this.state.list )\r\n      return (\r\n          <div className=\"active\">\r\n              <h1>我是类组件-----{ this.state.num }</h1>\r\n              <button onClick={ this.handleClick.bind( this ) } >点击</button>\r\n              {\r\n                  this.state.list.map( item => {\r\n                      return <p>{ item }</p>\r\n                  })\r\n              }\r\n              {/* <h1>数组的长度：{ this.state.list.length }</h1> */}\r\n          </div>\r\n      )\r\n  }\r\n}\r\n\r\n\r\nReactDOM.render( <Tan />, document.querySelector(\"#root\") )"]}